controller:
  # -- Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
  config: {
      "enable-real-ip": "true",
      "use-forwarded-headers": "true",
      "ssl-redirect": "false", 
      "proxy-body-size": "0",
      "proxy-connect-timeout": "600s",
      "proxy-read-timeout": "600s",
      "proxy-send-timeout": "600s",
  }

  ## Use host ports 80 and 443
  ## Disabled by default
  hostPort:
    # -- Enable 'hostPort' or not
    enabled: true
    ports:
      # -- 'hostPort' http port
      http: 80
      # -- 'hostPort' https port
      https: 443

  ## This section refers to the creation of the IngressClass resource
  ## IngressClass resources are supported since k8s >= 1.18 and required since k8s >= 1.19
  ingressClassResource:
    # -- Name of the ingressClass
    name: nginx
    # -- Is this ingressClass enabled or not
    enabled: true
    # -- Is this the default ingressClass for the cluster
    default: false

  # -- For backwards compatibility with ingress.class annotation, use ingressClass.
  # Algorithm is as follows, first ingressClassName is considered, if not present, controller looks for ingress.class annotation
  ingressClass: nginx

  # -- Use a `DaemonSet` or `Deployment`
  kind: DaemonSet

  # -- Annotations to be added to the controller Deployment or DaemonSet
  ##
  annotations:
  #  keel.sh/pollSchedule: "@every 60m"
    prometheus.io/port: "10254"
    prometheus.io/scrape: "true"


  # -- Node labels for controller pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector:
    node-role.kubernetes.io/controlplane: "true"

  metrics:
    port: 10254
    portName: metrics
    # if this port is changed, change healthz-port: in extraArgs: accordingly
    enabled: true

    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"

      servicePort: 10254

## Default 404 backend
##
defaultBackend:
  ##
  enabled: false

  service:
    annotations:
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"

# -- TCP service key-value pairs
## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md
##
tcp:
  25565: "external-service/forgemc:25565"
  8080: "internal-service/unifi:8080"
  8443: "internal-service/unifi:8443"
  8843: "internal-service/unifi:8843"
  8880: "internal-service/unifi:8880"
  3128: "internal-service/squid:3128"

# -- UDP service key-value pairs
## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md
##
udp:
  3478: "internal-service/unifi:3478"
  10001: "internal-service/unifi:10001"
